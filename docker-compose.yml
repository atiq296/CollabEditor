services:
  # Frontend service
  frontend:
    build:
      context: ./client/frontend
      dockerfile: Dockerfile
      target: production
    ports:
      - "3000:80"
    env_file:
      - ./client/frontend/.env
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - collab-network

  # Backend service
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: production
    ports:
      - "5000:5000"
    env_file:
      - ./server/.env
    environment:
      - NODE_ENV=production
      - PORT=5000
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - collab-network
    volumes:
      - uploads:/app/uploads

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - collab-network
    volumes:
      - redis-data:/data

networks:
  collab-network:
    driver: bridge

volumes:
  uploads:
    driver: local
  redis-data:
    driver: local
